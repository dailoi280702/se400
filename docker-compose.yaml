version: "3.8"

services:
  traefik:
    image: traefik:v2.4.8
    network_mode: host
  api-gateway:
    image: traefik:v2.4.8
    command: --api.insecure=true --providers.docker
    ports:
      - "4000:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-net

  backend:
    build: backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backendRouter.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backendRouter.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik-net"
    networks:
      - traefik-net
      - backend-net
    depends_on:
      - postgres
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"

  data-warehouse:
    build: data-warehouse
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.warehouseRouter.rule=PathPrefix(`/warehouse`)"
      - "traefik.http.services.warehouseRouter.loadbalancer.server.port=5000"
      - "traefik.docker.network=traefik-net"
    networks:
      - traefik-net
      - backend-net
    volumes:
      - data-lake:/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  course-recommendation:
    build: course-recommendation
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.recommendationModelRouter.rule=PathPrefix(`/recommendation-model`)"
      - "traefik.http.services.recommendationModelRouter.loadbalancer.server.port=5000"
      - "traefik.docker.network=traefik-net"
    networks:
      - traefik-net
      - backend-net
    volumes:
      - data-lake:/data

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - backend-net

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    ports:
      - "6380:6379"
    networks:
      - backend-net

networks:
  traefik-net: {}
  backend-net: {}

volumes:
  redis-data: {}
  postgres-data: {}
  data-lake: {}
